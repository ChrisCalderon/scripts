#!/bin/bash

TESTNET=$HOME/.testnet
GENESIS=$TESTNET/genesis.json
GETH_PID_FILE=$TESTNET/geth.pid
PASSWORD=$TESTNET/password.txt
LOGS=$TESTNET/logs
ADDRESS=$TESTNET/address.txt

show_help(){
    echo "Usage:
    testnet [option]

Summary:
    Use geth to test your contract code with testnet! testnet handles
  mundane details like setting up an address with a random password, genesis
  block creation, and more. Use testnet to start your private network from
  scratch with a single command, and to connect to the a console to interact
  with your node.

    testnet stores all it's miscellaneous files in this directory:

    $TESTNET

    The ipc connection for the testnet node is located here:

    $TESTNET/geth.ipc

    testnet only can only handle one option at a time right now.

Options:
    --reset, -r              Deletes EVERYTHING in your testnet directory and
                             runs the setup again.
    --kill, -k               Kills the current node.
    --console, -c            Connects to the console.
    --address, -a            Prints the current coinbase address and exits.
    --help, -h               Shows this help.

    Using testnet without an option simply starts the testnet."
}

get_pid(){
    read GETH_PID < $GETH_PID_FILE
}

kill_geth(){
    if [ -z $1 ]; then echo 'Shutting down testnet.'; fi
    get_pid
    kill -s SIGINT $GETH_PID &> /dev/null
    rm $GETH_PID_FILE &> /dev/null
}

start_geth(){
    if [ -f $GETH_PID_FILE ]; then
	get_pid
	if kill -0 $GETH_PID &> /dev/null; then
	    echo 'testnet already running! Try testnet -c.'
	    return 1
	fi
	kill_geth 1
    fi
    echo 'Starting testnet.'
    LOG_FILE="$LOGS/geth:$(date +%F:%T).log"
    nohup geth --rpc --networkid 9001 --blockchainversion 9001 --nodiscover --unlock 0 --datadir $TESTNET --password $PASSWORD --mine --minerthreads 1 --genesis $GENESIS </dev/null &>$LOG_FILE &
    echo $! > $GETH_PID_FILE
    return 0
}

setup(){
    echo 'Running setup.'
    mkdir $TESTNET
    mkdir $LOGS
    hex -r32 > $PASSWORD
    cat > $GENESIS <<EOF
{
  "alloc":{},
  "mixhash":"0x0000000000000000000000000000000000000000000000000000000000000000",
  "extraData":"0x`hex -r32`",
  "difficulty":"0x1",
  "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
  "coinbase": "0x0000000000000000000000000000000000000000",
  "nonce": "0x`hex -r8`",
  "gasLimit": "0x2fefd8",
  "timestamp": "0x00"
}
EOF
    geth --datadir $TESTNET --password $PASSWORD account new | egrep -o --color=never '[0-9a-f]{40}' > $ADDRESS
}

reset(){
    echo 'Reseting testnet data.'
    if [ -f $GETH_PID_FILE ]; then kill_geth; fi
    rm -rf $TESTNET
    setup
}

if [ ! -d $TESTNET ]; then
    setup
fi

case $1 in
    --help|-h)
	show_help
	;;
    --reset|-r)
	reset
	;;
    --kill|-k)
	kill_geth
	;;
    '')
	if ! start_geth; then exit 1; fi
	;;
    -c|--console)
	geth --datadir $TESTNET attach
	;;
    -a|--address)
	cat $ADDRESS
	;;
    *)
	echo 'Unknown command: '"$1"
	exit 1
	;;
esac
exit 0
