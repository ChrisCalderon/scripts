#!/bin/bash

EXIT_CODE=0
TESTNET=$HOME/.testnet
GENESIS=$TESTNET/genesis.json
GETH_PID_FILE=$TESTNET/geth.pid
PASSFILE=$TESTNET/passfile
LOGS=$TESTNET/logs
ADDR=$TESTNET/address

get_pid(){
    read GETH_PID <$GETH_PID_FILE
}

start_geth(){
    nohup geth --networkid 9001 --blockchainversion 9001 --nodiscover --unlock 0 --datadir $TESTNET --password $PASSFILE --mine --minerthreads 1 --genesis $GENESIS </dev/null &>$LOG_FILE &
}

setup(){
    mkdir $TESTNET
    mkdir $LOGS
    hex -r32 > $PASSFILE
    cat > $GENESIS <<EOF
{
  "alloc":{},
  "mixhash":"0x0000000000000000000000000000000000000000000000000000000000000000",
  "extraData":"0x`hex -r32`",
  "difficulty":"0x1",
  "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
  "coinbase": "0x0000000000000000000000000000000000000000",
  "nonce": "0x`hex -r8`",
  "gasLimit": "0x2fefd8",
  "timestamp": "0x00"
}
EOF
    geth --datadir $TESTNET --password $PASSFILE account new >addr.temp
    grep -E -o --color=never "[0-9]{40}" addr.temp >$ADDR
    rm addr.temp
}

if [ ! -d $TESTNET ]; then
    echo 'Running first-time setup...'
    setup
fi

case $1 in
    --reset|-r)
	echo 'Resetting...'
	rm -rf $TESTNET
	setup
	;;
    --kill|-k)
	if [ -a $GETH_PID_FILE ]; then #if 
	    echo 'Shutting down geth.'
	    get_pid
	    kill -s SIGINT $GETH_PID # kill using SIGINT
	    rm -f $GETH_PID_FILE # delete pid file
	else
	    echo 'No geth node running to shut down!'
	    EXIT_CODE=1
	fi
	;;
    '')
	if [ -a $GETH_PID_FILE ]; then
	    get_pid
	    echo "There's already a geth process running with pid $GETH_PID"
	    EXIT_CODE = 1
	else
	    echo 'Starting geth testnet.'
	    LOG_FILE="$LOGS/geth:$(date +%F:%T).log"
	    start_geth
	    echo $! > $GETH_PID_FILE
	fi
	;;
    -c|--console)
	geth --datadir $TESTNET attach
	;;
    *)
	echo 'Unknown command: '"$1"
	EXIT_CODE=1
	;;
esac
exit $EXIT_CODE
